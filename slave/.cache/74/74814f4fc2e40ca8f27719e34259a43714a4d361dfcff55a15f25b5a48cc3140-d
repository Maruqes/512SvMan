// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/marques/.gvm/pkgsets/go1.25.0/global/pkg/mod/libvirt.org/go/libvirt@v1.11006.0/error.go:1:1
/*
 * This file is part of the libvirt-go-module project
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * Copyright (c) 2013 Alex Zorin
 * Copyright (C) 2016 Red Hat, Inc.
 *
 */

package libvirt

/*
#cgo !libvirt_dlopen pkg-config: libvirt
#cgo libvirt_dlopen LDFLAGS: -ldl
#cgo libvirt_dlopen CFLAGS: -DLIBVIRT_DLOPEN
#include "libvirt_generated.h"

void ignoreErrorFunc(void *userData, virErrorPtr error) {
     // no-op
}
*/
import _ "unsafe"

import (
	"fmt"
)

func init() {
	( /*line :46:2*/_Cfunc_virSetErrorFuncWrapper /*line :46:25*/)(nil, ( /*line :46:33*/_Ctype_virErrorFunc /*line :46:47*/)(( /*line :46:49*/_Cgo_ptr(_Cfpvar_fp_ignoreErrorFunc) /*line :46:65*/)))
}

type ErrorLevel int

const (
	ERR_NONE    = ErrorLevel(( /*line :52:27*/_Ciconst_VIR_ERR_NONE /*line :52:40*/))
	ERR_WARNING = ErrorLevel(( /*line :53:27*/_Ciconst_VIR_ERR_WARNING /*line :53:43*/))
	ERR_ERROR   = ErrorLevel(( /*line :54:27*/_Ciconst_VIR_ERR_ERROR /*line :54:41*/))
)

type ErrorNumber int

func (err ErrorNumber) Error() string {
	return fmt.Sprintf("virErrCode(%d)", err)
}

const (
	ERR_OK = ErrorNumber(( /*line :64:23*/_Ciconst_VIR_ERR_OK /*line :64:34*/))

	// internal error
	ERR_INTERNAL_ERROR = ErrorNumber(( /*line :67:35*/_Ciconst_VIR_ERR_INTERNAL_ERROR /*line :67:58*/))

	// memory allocation failure
	ERR_NO_MEMORY = ErrorNumber(( /*line :70:30*/_Ciconst_VIR_ERR_NO_MEMORY /*line :70:48*/))

	// no support for this function
	ERR_NO_SUPPORT = ErrorNumber(( /*line :73:31*/_Ciconst_VIR_ERR_NO_SUPPORT /*line :73:50*/))

	// could not resolve hostname
	ERR_UNKNOWN_HOST = ErrorNumber(( /*line :76:33*/_Ciconst_VIR_ERR_UNKNOWN_HOST /*line :76:54*/))

	// can't connect to hypervisor
	ERR_NO_CONNECT = ErrorNumber(( /*line :79:31*/_Ciconst_VIR_ERR_NO_CONNECT /*line :79:50*/))

	// invalid connection object
	ERR_INVALID_CONN = ErrorNumber(( /*line :82:33*/_Ciconst_VIR_ERR_INVALID_CONN /*line :82:54*/))

	// invalid domain object
	ERR_INVALID_DOMAIN = ErrorNumber(( /*line :85:35*/_Ciconst_VIR_ERR_INVALID_DOMAIN /*line :85:58*/))

	// invalid function argument
	ERR_INVALID_ARG = ErrorNumber(( /*line :88:32*/_Ciconst_VIR_ERR_INVALID_ARG /*line :88:52*/))

	// a command to hypervisor failed
	ERR_OPERATION_FAILED = ErrorNumber(( /*line :91:37*/_Ciconst_VIR_ERR_OPERATION_FAILED /*line :91:62*/))

	// a HTTP GET command to failed
	ERR_GET_FAILED = ErrorNumber(( /*line :94:31*/_Ciconst_VIR_ERR_GET_FAILED /*line :94:50*/))

	// a HTTP POST command to failed
	ERR_POST_FAILED = ErrorNumber(( /*line :97:32*/_Ciconst_VIR_ERR_POST_FAILED /*line :97:52*/))

	// unexpected HTTP error code
	ERR_HTTP_ERROR = ErrorNumber(( /*line :100:31*/_Ciconst_VIR_ERR_HTTP_ERROR /*line :100:50*/))

	// failure to serialize an S-Expr
	ERR_SEXPR_SERIAL = ErrorNumber(( /*line :103:33*/_Ciconst_VIR_ERR_SEXPR_SERIAL /*line :103:54*/))

	// could not open Xen hypervisor control
	ERR_NO_XEN = ErrorNumber(( /*line :106:27*/_Ciconst_VIR_ERR_NO_XEN /*line :106:42*/))

	// failure doing an hypervisor call
	ERR_XEN_CALL = ErrorNumber(( /*line :109:29*/_Ciconst_VIR_ERR_XEN_CALL /*line :109:46*/))

	// unknown OS type
	ERR_OS_TYPE = ErrorNumber(( /*line :112:28*/_Ciconst_VIR_ERR_OS_TYPE /*line :112:44*/))

	// missing kernel information
	ERR_NO_KERNEL = ErrorNumber(( /*line :115:30*/_Ciconst_VIR_ERR_NO_KERNEL /*line :115:48*/))

	// missing root device information
	ERR_NO_ROOT = ErrorNumber(( /*line :118:28*/_Ciconst_VIR_ERR_NO_ROOT /*line :118:44*/))

	// missing source device information
	ERR_NO_SOURCE = ErrorNumber(( /*line :121:30*/_Ciconst_VIR_ERR_NO_SOURCE /*line :121:48*/))

	// missing target device information
	ERR_NO_TARGET = ErrorNumber(( /*line :124:30*/_Ciconst_VIR_ERR_NO_TARGET /*line :124:48*/))

	// missing domain name information
	ERR_NO_NAME = ErrorNumber(( /*line :127:28*/_Ciconst_VIR_ERR_NO_NAME /*line :127:44*/))

	// missing domain OS information
	ERR_NO_OS = ErrorNumber(( /*line :130:26*/_Ciconst_VIR_ERR_NO_OS /*line :130:40*/))

	// missing domain devices information
	ERR_NO_DEVICE = ErrorNumber(( /*line :133:30*/_Ciconst_VIR_ERR_NO_DEVICE /*line :133:48*/))

	// could not open Xen Store control
	ERR_NO_XENSTORE = ErrorNumber(( /*line :136:32*/_Ciconst_VIR_ERR_NO_XENSTORE /*line :136:52*/))

	// too many drivers registered
	ERR_DRIVER_FULL = ErrorNumber(( /*line :139:32*/_Ciconst_VIR_ERR_DRIVER_FULL /*line :139:52*/))

	// not supported by the drivers (DEPRECATED)
	ERR_CALL_FAILED = ErrorNumber(( /*line :142:32*/_Ciconst_VIR_ERR_CALL_FAILED /*line :142:52*/))

	// an XML description is not well formed or broken
	ERR_XML_ERROR = ErrorNumber(( /*line :145:30*/_Ciconst_VIR_ERR_XML_ERROR /*line :145:48*/))

	// the domain already exist
	ERR_DOM_EXIST = ErrorNumber(( /*line :148:30*/_Ciconst_VIR_ERR_DOM_EXIST /*line :148:48*/))

	// operation forbidden on read-only connections
	ERR_OPERATION_DENIED = ErrorNumber(( /*line :151:37*/_Ciconst_VIR_ERR_OPERATION_DENIED /*line :151:62*/))

	// failed to open a conf file
	ERR_OPEN_FAILED = ErrorNumber(( /*line :154:32*/_Ciconst_VIR_ERR_OPEN_FAILED /*line :154:52*/))

	// failed to read a conf file
	ERR_READ_FAILED = ErrorNumber(( /*line :157:32*/_Ciconst_VIR_ERR_READ_FAILED /*line :157:52*/))

	// failed to parse a conf file
	ERR_PARSE_FAILED = ErrorNumber(( /*line :160:33*/_Ciconst_VIR_ERR_PARSE_FAILED /*line :160:54*/))

	// failed to parse the syntax of a conf file
	ERR_CONF_SYNTAX = ErrorNumber(( /*line :163:32*/_Ciconst_VIR_ERR_CONF_SYNTAX /*line :163:52*/))

	// failed to write a conf file
	ERR_WRITE_FAILED = ErrorNumber(( /*line :166:33*/_Ciconst_VIR_ERR_WRITE_FAILED /*line :166:54*/))

	// detail of an XML error
	ERR_XML_DETAIL = ErrorNumber(( /*line :169:31*/_Ciconst_VIR_ERR_XML_DETAIL /*line :169:50*/))

	// invalid network object
	ERR_INVALID_NETWORK = ErrorNumber(( /*line :172:36*/_Ciconst_VIR_ERR_INVALID_NETWORK /*line :172:60*/))

	// the network already exist
	ERR_NETWORK_EXIST = ErrorNumber(( /*line :175:34*/_Ciconst_VIR_ERR_NETWORK_EXIST /*line :175:56*/))

	// general system call failure
	ERR_SYSTEM_ERROR = ErrorNumber(( /*line :178:33*/_Ciconst_VIR_ERR_SYSTEM_ERROR /*line :178:54*/))

	// some sort of RPC error
	ERR_RPC = ErrorNumber(( /*line :181:24*/_Ciconst_VIR_ERR_RPC /*line :181:36*/))

	// error from a GNUTLS call
	ERR_GNUTLS_ERROR = ErrorNumber(( /*line :184:33*/_Ciconst_VIR_ERR_GNUTLS_ERROR /*line :184:54*/))

	// failed to start network
	WAR_NO_NETWORK = ErrorNumber(( /*line :187:31*/_Ciconst_VIR_WAR_NO_NETWORK /*line :187:50*/))

	// domain not found or unexpectedly disappeared
	ERR_NO_DOMAIN = ErrorNumber(( /*line :190:30*/_Ciconst_VIR_ERR_NO_DOMAIN /*line :190:48*/))

	// network not found
	ERR_NO_NETWORK = ErrorNumber(( /*line :193:31*/_Ciconst_VIR_ERR_NO_NETWORK /*line :193:50*/))

	// invalid MAC address
	ERR_INVALID_MAC = ErrorNumber(( /*line :196:32*/_Ciconst_VIR_ERR_INVALID_MAC /*line :196:52*/))

	// authentication failed
	ERR_AUTH_FAILED = ErrorNumber(( /*line :199:32*/_Ciconst_VIR_ERR_AUTH_FAILED /*line :199:52*/))

	// invalid storage pool object
	ERR_INVALID_STORAGE_POOL = ErrorNumber(( /*line :202:41*/_Ciconst_VIR_ERR_INVALID_STORAGE_POOL /*line :202:70*/))

	// invalid storage vol object
	ERR_INVALID_STORAGE_VOL = ErrorNumber(( /*line :205:40*/_Ciconst_VIR_ERR_INVALID_STORAGE_VOL /*line :205:68*/))

	// failed to start storage
	WAR_NO_STORAGE = ErrorNumber(( /*line :208:31*/_Ciconst_VIR_WAR_NO_STORAGE /*line :208:50*/))

	// storage pool not found
	ERR_NO_STORAGE_POOL = ErrorNumber(( /*line :211:36*/_Ciconst_VIR_ERR_NO_STORAGE_POOL /*line :211:60*/))

	// storage volume not found
	ERR_NO_STORAGE_VOL = ErrorNumber(( /*line :214:35*/_Ciconst_VIR_ERR_NO_STORAGE_VOL /*line :214:58*/))

	// failed to start node driver
	WAR_NO_NODE = ErrorNumber(( /*line :217:28*/_Ciconst_VIR_WAR_NO_NODE /*line :217:44*/))

	// invalid node device object
	ERR_INVALID_NODE_DEVICE = ErrorNumber(( /*line :220:40*/_Ciconst_VIR_ERR_INVALID_NODE_DEVICE /*line :220:68*/))

	// node device not found
	ERR_NO_NODE_DEVICE = ErrorNumber(( /*line :223:35*/_Ciconst_VIR_ERR_NO_NODE_DEVICE /*line :223:58*/))

	// security model not found
	ERR_NO_SECURITY_MODEL = ErrorNumber(( /*line :226:38*/_Ciconst_VIR_ERR_NO_SECURITY_MODEL /*line :226:64*/))

	// operation is not applicable at this time
	ERR_OPERATION_INVALID = ErrorNumber(( /*line :229:38*/_Ciconst_VIR_ERR_OPERATION_INVALID /*line :229:64*/))

	// failed to start interface driver
	WAR_NO_INTERFACE = ErrorNumber(( /*line :232:33*/_Ciconst_VIR_WAR_NO_INTERFACE /*line :232:54*/))

	// interface driver not running
	ERR_NO_INTERFACE = ErrorNumber(( /*line :235:33*/_Ciconst_VIR_ERR_NO_INTERFACE /*line :235:54*/))

	// invalid interface object
	ERR_INVALID_INTERFACE = ErrorNumber(( /*line :238:38*/_Ciconst_VIR_ERR_INVALID_INTERFACE /*line :238:64*/))

	// more than one matching interface found
	ERR_MULTIPLE_INTERFACES = ErrorNumber(( /*line :241:40*/_Ciconst_VIR_ERR_MULTIPLE_INTERFACES /*line :241:68*/))

	// failed to start nwfilter driver
	WAR_NO_NWFILTER = ErrorNumber(( /*line :244:32*/_Ciconst_VIR_WAR_NO_NWFILTER /*line :244:52*/))

	// invalid nwfilter object
	ERR_INVALID_NWFILTER = ErrorNumber(( /*line :247:37*/_Ciconst_VIR_ERR_INVALID_NWFILTER /*line :247:62*/))

	// nw filter pool not found
	ERR_NO_NWFILTER = ErrorNumber(( /*line :250:32*/_Ciconst_VIR_ERR_NO_NWFILTER /*line :250:52*/))

	// nw filter pool not found
	ERR_BUILD_FIREWALL = ErrorNumber(( /*line :253:35*/_Ciconst_VIR_ERR_BUILD_FIREWALL /*line :253:58*/))

	// failed to start secret storage
	WAR_NO_SECRET = ErrorNumber(( /*line :256:30*/_Ciconst_VIR_WAR_NO_SECRET /*line :256:48*/))

	// invalid secret
	ERR_INVALID_SECRET = ErrorNumber(( /*line :259:35*/_Ciconst_VIR_ERR_INVALID_SECRET /*line :259:58*/))

	// secret not found
	ERR_NO_SECRET = ErrorNumber(( /*line :262:30*/_Ciconst_VIR_ERR_NO_SECRET /*line :262:48*/))

	// unsupported configuration construct
	ERR_CONFIG_UNSUPPORTED = ErrorNumber(( /*line :265:39*/_Ciconst_VIR_ERR_CONFIG_UNSUPPORTED /*line :265:66*/))

	// timeout occurred during operation
	ERR_OPERATION_TIMEOUT = ErrorNumber(( /*line :268:38*/_Ciconst_VIR_ERR_OPERATION_TIMEOUT /*line :268:64*/))

	// a migration worked, but making the VM persist on the dest host failed
	ERR_MIGRATE_PERSIST_FAILED = ErrorNumber(( /*line :271:43*/_Ciconst_VIR_ERR_MIGRATE_PERSIST_FAILED /*line :271:74*/))

	// a synchronous hook script failed
	ERR_HOOK_SCRIPT_FAILED = ErrorNumber(( /*line :274:39*/_Ciconst_VIR_ERR_HOOK_SCRIPT_FAILED /*line :274:66*/))

	// invalid domain snapshot
	ERR_INVALID_DOMAIN_SNAPSHOT = ErrorNumber(( /*line :277:44*/_Ciconst_VIR_ERR_INVALID_DOMAIN_SNAPSHOT /*line :277:76*/))

	// domain snapshot not found
	ERR_NO_DOMAIN_SNAPSHOT = ErrorNumber(( /*line :280:39*/_Ciconst_VIR_ERR_NO_DOMAIN_SNAPSHOT /*line :280:66*/))

	// stream pointer not valid
	ERR_INVALID_STREAM = ErrorNumber(( /*line :283:35*/_Ciconst_VIR_ERR_INVALID_STREAM /*line :283:58*/))

	// valid API use but unsupported by the given driver
	ERR_ARGUMENT_UNSUPPORTED = ErrorNumber(( /*line :286:41*/_Ciconst_VIR_ERR_ARGUMENT_UNSUPPORTED /*line :286:70*/))

	// storage pool probe failed
	ERR_STORAGE_PROBE_FAILED = ErrorNumber(( /*line :289:41*/_Ciconst_VIR_ERR_STORAGE_PROBE_FAILED /*line :289:70*/))

	// storage pool already built
	ERR_STORAGE_POOL_BUILT = ErrorNumber(( /*line :292:39*/_Ciconst_VIR_ERR_STORAGE_POOL_BUILT /*line :292:66*/))

	// force was not requested for a risky domain snapshot revert
	ERR_SNAPSHOT_REVERT_RISKY = ErrorNumber(( /*line :295:42*/_Ciconst_VIR_ERR_SNAPSHOT_REVERT_RISKY /*line :295:72*/))

	// operation on a domain was canceled/aborted by user
	ERR_OPERATION_ABORTED = ErrorNumber(( /*line :298:38*/_Ciconst_VIR_ERR_OPERATION_ABORTED /*line :298:64*/))

	// authentication cancelled
	ERR_AUTH_CANCELLED = ErrorNumber(( /*line :301:35*/_Ciconst_VIR_ERR_AUTH_CANCELLED /*line :301:58*/))

	// The metadata is not present
	ERR_NO_DOMAIN_METADATA = ErrorNumber(( /*line :304:39*/_Ciconst_VIR_ERR_NO_DOMAIN_METADATA /*line :304:66*/))

	// Migration is not safe
	ERR_MIGRATE_UNSAFE = ErrorNumber(( /*line :307:35*/_Ciconst_VIR_ERR_MIGRATE_UNSAFE /*line :307:58*/))

	// integer overflow
	ERR_OVERFLOW = ErrorNumber(( /*line :310:29*/_Ciconst_VIR_ERR_OVERFLOW /*line :310:46*/))

	// action prevented by block copy job
	ERR_BLOCK_COPY_ACTIVE = ErrorNumber(( /*line :313:38*/_Ciconst_VIR_ERR_BLOCK_COPY_ACTIVE /*line :313:64*/))

	// The requested operation is not supported
	ERR_OPERATION_UNSUPPORTED = ErrorNumber(( /*line :316:42*/_Ciconst_VIR_ERR_OPERATION_UNSUPPORTED /*line :316:72*/))

	// error in ssh transport driver
	ERR_SSH = ErrorNumber(( /*line :319:24*/_Ciconst_VIR_ERR_SSH /*line :319:36*/))

	// guest agent is unresponsive, not running or not usable
	ERR_AGENT_UNRESPONSIVE = ErrorNumber(( /*line :322:39*/_Ciconst_VIR_ERR_AGENT_UNRESPONSIVE /*line :322:66*/))

	// resource is already in use
	ERR_RESOURCE_BUSY = ErrorNumber(( /*line :325:34*/_Ciconst_VIR_ERR_RESOURCE_BUSY /*line :325:56*/))

	// operation on the object/resource was denied
	ERR_ACCESS_DENIED = ErrorNumber(( /*line :328:34*/_Ciconst_VIR_ERR_ACCESS_DENIED /*line :328:56*/))

	// error from a dbus service
	ERR_DBUS_SERVICE = ErrorNumber(( /*line :331:33*/_Ciconst_VIR_ERR_DBUS_SERVICE /*line :331:54*/))

	// the storage vol already exists
	ERR_STORAGE_VOL_EXIST = ErrorNumber(( /*line :334:38*/_Ciconst_VIR_ERR_STORAGE_VOL_EXIST /*line :334:64*/))

	// given CPU is incompatible with host CPU
	ERR_CPU_INCOMPATIBLE = ErrorNumber(( /*line :337:37*/_Ciconst_VIR_ERR_CPU_INCOMPATIBLE /*line :337:62*/))

	// XML document doesn't validate against schema
	ERR_XML_INVALID_SCHEMA = ErrorNumber(( /*line :340:39*/_Ciconst_VIR_ERR_XML_INVALID_SCHEMA /*line :340:66*/))

	// Finish API succeeded but it is expected to return NULL */
	ERR_MIGRATE_FINISH_OK = ErrorNumber(( /*line :343:38*/_Ciconst_VIR_ERR_MIGRATE_FINISH_OK /*line :343:64*/))

	// authentication unavailable
	ERR_AUTH_UNAVAILABLE = ErrorNumber(( /*line :346:37*/_Ciconst_VIR_ERR_AUTH_UNAVAILABLE /*line :346:62*/))

	// Server was not found
	ERR_NO_SERVER = ErrorNumber(( /*line :349:30*/_Ciconst_VIR_ERR_NO_SERVER /*line :349:48*/))

	// Client was not found
	ERR_NO_CLIENT = ErrorNumber(( /*line :352:30*/_Ciconst_VIR_ERR_NO_CLIENT /*line :352:48*/))

	// guest agent replies with wrong id to guest sync command
	ERR_AGENT_UNSYNCED = ErrorNumber(( /*line :355:35*/_Ciconst_VIR_ERR_AGENT_UNSYNCED /*line :355:58*/))

	// error in libssh transport driver
	ERR_LIBSSH = ErrorNumber(( /*line :358:27*/_Ciconst_VIR_ERR_LIBSSH /*line :358:42*/))

	// libvirt fail to find the desired device
	ERR_DEVICE_MISSING = ErrorNumber(( /*line :361:35*/_Ciconst_VIR_ERR_DEVICE_MISSING /*line :361:58*/))

	// Invalid nwfilter binding object
	ERR_INVALID_NWFILTER_BINDING = ErrorNumber(( /*line :364:45*/_Ciconst_VIR_ERR_INVALID_NWFILTER_BINDING /*line :364:78*/))

	// Requested nwfilter binding does not exist
	ERR_NO_NWFILTER_BINDING = ErrorNumber(( /*line :367:40*/_Ciconst_VIR_ERR_NO_NWFILTER_BINDING /*line :367:68*/))

	// invalid domain checkpoint
	ERR_INVALID_DOMAIN_CHECKPOINT = ErrorNumber(( /*line :370:46*/_Ciconst_VIR_ERR_INVALID_DOMAIN_CHECKPOINT /*line :370:80*/))

	// domain checkpoint not found
	ERR_NO_DOMAIN_CHECKPOINT = ErrorNumber(( /*line :373:41*/_Ciconst_VIR_ERR_NO_DOMAIN_CHECKPOINT /*line :373:70*/))

	// domain backup job id not found *
	ERR_NO_DOMAIN_BACKUP = ErrorNumber(( /*line :376:37*/_Ciconst_VIR_ERR_NO_DOMAIN_BACKUP /*line :376:62*/))

	// invalid network port object
	ERR_INVALID_NETWORK_PORT = ErrorNumber(( /*line :379:41*/_Ciconst_VIR_ERR_INVALID_NETWORK_PORT /*line :379:70*/))

	// network port already exists
	ERR_NETWORK_PORT_EXIST = ErrorNumber(( /*line :382:39*/_Ciconst_VIR_ERR_NETWORK_PORT_EXIST /*line :382:66*/))

	// network port not found
	ERR_NO_NETWORK_PORT = ErrorNumber(( /*line :385:36*/_Ciconst_VIR_ERR_NO_NETWORK_PORT /*line :385:60*/))

	// no domain's hostname found
	ERR_NO_HOSTNAME = ErrorNumber(( /*line :388:32*/_Ciconst_VIR_ERR_NO_HOSTNAME /*line :388:52*/))

	// checkpoint is inconsistent
	ERR_CHECKPOINT_INCONSISTENT = ErrorNumber(( /*line :391:44*/_Ciconst_VIR_ERR_CHECKPOINT_INCONSISTENT /*line :391:76*/))

	// more than one matching domain found
	ERR_MULTIPLE_DOMAINS = ErrorNumber(( /*line :394:37*/_Ciconst_VIR_ERR_MULTIPLE_DOMAINS /*line :394:62*/))

	// The metadata is not present
	ERR_NO_NETWORK_METADATA = ErrorNumber(( /*line :397:40*/_Ciconst_VIR_ERR_NO_NETWORK_METADATA /*line :397:68*/))

	// Guest agent didn't respond to a non-sync command within timeout
	ERR_AGENT_COMMAND_TIMEOUT = ErrorNumber(( /*line :400:42*/_Ciconst_VIR_ERR_AGENT_COMMAND_TIMEOUT /*line :400:72*/))

	// Guest agent responded with failure to a command
	ERR_AGENT_COMMAND_FAILED = ErrorNumber(( /*line :403:41*/_Ciconst_VIR_ERR_AGENT_COMMAND_FAILED /*line :403:70*/))
)

type ErrorDomain int

const (
	FROM_NONE = ErrorDomain(( /*line :409:26*/_Ciconst_VIR_FROM_NONE /*line :409:40*/))

	// Error at Xen hypervisor layer
	FROM_XEN = ErrorDomain(( /*line :412:25*/_Ciconst_VIR_FROM_XEN /*line :412:38*/))

	// Error at connection with xend daemon
	FROM_XEND = ErrorDomain(( /*line :415:26*/_Ciconst_VIR_FROM_XEND /*line :415:40*/))

	// Error at connection with xen store
	FROM_XENSTORE = ErrorDomain(( /*line :418:30*/_Ciconst_VIR_FROM_XENSTORE /*line :418:48*/))

	// Error in the S-Expression code
	FROM_SEXPR = ErrorDomain(( /*line :421:27*/_Ciconst_VIR_FROM_SEXPR /*line :421:42*/))

	// Error in the XML code
	FROM_XML = ErrorDomain(( /*line :424:25*/_Ciconst_VIR_FROM_XML /*line :424:38*/))

	// Error when operating on a domain
	FROM_DOM = ErrorDomain(( /*line :427:25*/_Ciconst_VIR_FROM_DOM /*line :427:38*/))

	// Error in the XML-RPC code
	FROM_RPC = ErrorDomain(( /*line :430:25*/_Ciconst_VIR_FROM_RPC /*line :430:38*/))

	// Error in the proxy code; unused since 0.8.6
	FROM_PROXY = ErrorDomain(( /*line :433:27*/_Ciconst_VIR_FROM_PROXY /*line :433:42*/))

	// Error in the configuration file handling
	FROM_CONF = ErrorDomain(( /*line :436:26*/_Ciconst_VIR_FROM_CONF /*line :436:40*/))

	// Error at the QEMU daemon
	FROM_QEMU = ErrorDomain(( /*line :439:26*/_Ciconst_VIR_FROM_QEMU /*line :439:40*/))

	// Error when operating on a network
	FROM_NET = ErrorDomain(( /*line :442:25*/_Ciconst_VIR_FROM_NET /*line :442:38*/))

	// Error from test driver
	FROM_TEST = ErrorDomain(( /*line :445:26*/_Ciconst_VIR_FROM_TEST /*line :445:40*/))

	// Error from remote driver
	FROM_REMOTE = ErrorDomain(( /*line :448:28*/_Ciconst_VIR_FROM_REMOTE /*line :448:44*/))

	// Error from OpenVZ driver
	FROM_OPENVZ = ErrorDomain(( /*line :451:28*/_Ciconst_VIR_FROM_OPENVZ /*line :451:44*/))

	// Error at Xen XM layer
	FROM_XENXM = ErrorDomain(( /*line :454:27*/_Ciconst_VIR_FROM_XENXM /*line :454:42*/))

	// Error in the Linux Stats code
	FROM_STATS_LINUX = ErrorDomain(( /*line :457:33*/_Ciconst_VIR_FROM_STATS_LINUX /*line :457:54*/))

	// Error from Linux Container driver
	FROM_LXC = ErrorDomain(( /*line :460:25*/_Ciconst_VIR_FROM_LXC /*line :460:38*/))

	// Error from storage driver
	FROM_STORAGE = ErrorDomain(( /*line :463:29*/_Ciconst_VIR_FROM_STORAGE /*line :463:46*/))

	// Error from network config
	FROM_NETWORK = ErrorDomain(( /*line :466:29*/_Ciconst_VIR_FROM_NETWORK /*line :466:46*/))

	// Error from domain config
	FROM_DOMAIN = ErrorDomain(( /*line :469:28*/_Ciconst_VIR_FROM_DOMAIN /*line :469:44*/))

	// Error at the UML driver
	FROM_UML = ErrorDomain(( /*line :472:25*/_Ciconst_VIR_FROM_UML /*line :472:38*/))

	// Error from node device monitor
	FROM_NODEDEV = ErrorDomain(( /*line :475:29*/_Ciconst_VIR_FROM_NODEDEV /*line :475:46*/))

	// Error from xen inotify layer
	FROM_XEN_INOTIFY = ErrorDomain(( /*line :478:33*/_Ciconst_VIR_FROM_XEN_INOTIFY /*line :478:54*/))

	// Error from security framework
	FROM_SECURITY = ErrorDomain(( /*line :481:30*/_Ciconst_VIR_FROM_SECURITY /*line :481:48*/))

	// Error from VirtualBox driver
	FROM_VBOX = ErrorDomain(( /*line :484:26*/_Ciconst_VIR_FROM_VBOX /*line :484:40*/))

	// Error when operating on an interface
	FROM_INTERFACE = ErrorDomain(( /*line :487:31*/_Ciconst_VIR_FROM_INTERFACE /*line :487:50*/))

	// The OpenNebula driver no longer exists. Retained for ABI/API compat only
	FROM_ONE = ErrorDomain(( /*line :490:25*/_Ciconst_VIR_FROM_ONE /*line :490:38*/))

	// Error from ESX driver
	FROM_ESX = ErrorDomain(( /*line :493:25*/_Ciconst_VIR_FROM_ESX /*line :493:38*/))

	// Error from IBM power hypervisor
	FROM_PHYP = ErrorDomain(( /*line :496:26*/_Ciconst_VIR_FROM_PHYP /*line :496:40*/))

	// Error from secret storage
	FROM_SECRET = ErrorDomain(( /*line :499:28*/_Ciconst_VIR_FROM_SECRET /*line :499:44*/))

	// Error from CPU driver
	FROM_CPU = ErrorDomain(( /*line :502:25*/_Ciconst_VIR_FROM_CPU /*line :502:38*/))

	// Error from XenAPI
	FROM_XENAPI = ErrorDomain(( /*line :505:28*/_Ciconst_VIR_FROM_XENAPI /*line :505:44*/))

	// Error from network filter driver
	FROM_NWFILTER = ErrorDomain(( /*line :508:30*/_Ciconst_VIR_FROM_NWFILTER /*line :508:48*/))

	// Error from Synchronous hooks
	FROM_HOOK = ErrorDomain(( /*line :511:26*/_Ciconst_VIR_FROM_HOOK /*line :511:40*/))

	// Error from domain snapshot
	FROM_DOMAIN_SNAPSHOT = ErrorDomain(( /*line :514:37*/_Ciconst_VIR_FROM_DOMAIN_SNAPSHOT /*line :514:62*/))

	// Error from auditing subsystem
	FROM_AUDIT = ErrorDomain(( /*line :517:27*/_Ciconst_VIR_FROM_AUDIT /*line :517:42*/))

	// Error from sysinfo/SMBIOS
	FROM_SYSINFO = ErrorDomain(( /*line :520:29*/_Ciconst_VIR_FROM_SYSINFO /*line :520:46*/))

	// Error from I/O streams
	FROM_STREAMS = ErrorDomain(( /*line :523:29*/_Ciconst_VIR_FROM_STREAMS /*line :523:46*/))

	// Error from VMware driver
	FROM_VMWARE = ErrorDomain(( /*line :526:28*/_Ciconst_VIR_FROM_VMWARE /*line :526:44*/))

	// Error from event loop impl
	FROM_EVENT = ErrorDomain(( /*line :529:27*/_Ciconst_VIR_FROM_EVENT /*line :529:42*/))

	// Error from libxenlight driver
	FROM_LIBXL = ErrorDomain(( /*line :532:27*/_Ciconst_VIR_FROM_LIBXL /*line :532:42*/))

	// Error from lock manager
	FROM_LOCKING = ErrorDomain(( /*line :535:29*/_Ciconst_VIR_FROM_LOCKING /*line :535:46*/))

	// Error from Hyper-V driver
	FROM_HYPERV = ErrorDomain(( /*line :538:28*/_Ciconst_VIR_FROM_HYPERV /*line :538:44*/))

	// Error from capabilities
	FROM_CAPABILITIES = ErrorDomain(( /*line :541:34*/_Ciconst_VIR_FROM_CAPABILITIES /*line :541:56*/))

	// Error from URI handling
	FROM_URI = ErrorDomain(( /*line :544:25*/_Ciconst_VIR_FROM_URI /*line :544:38*/))

	// Error from auth handling
	FROM_AUTH = ErrorDomain(( /*line :547:26*/_Ciconst_VIR_FROM_AUTH /*line :547:40*/))

	// Error from DBus
	FROM_DBUS = ErrorDomain(( /*line :550:26*/_Ciconst_VIR_FROM_DBUS /*line :550:40*/))

	// Error from Parallels
	FROM_PARALLELS = ErrorDomain(( /*line :553:31*/_Ciconst_VIR_FROM_PARALLELS /*line :553:50*/))

	// Error from Device
	FROM_DEVICE = ErrorDomain(( /*line :556:28*/_Ciconst_VIR_FROM_DEVICE /*line :556:44*/))

	// Error from libssh2 connection transport
	FROM_SSH = ErrorDomain(( /*line :559:25*/_Ciconst_VIR_FROM_SSH /*line :559:38*/))

	// Error from lockspace
	FROM_LOCKSPACE = ErrorDomain(( /*line :562:31*/_Ciconst_VIR_FROM_LOCKSPACE /*line :562:50*/))

	// Error from initctl device communication
	FROM_INITCTL = ErrorDomain(( /*line :565:29*/_Ciconst_VIR_FROM_INITCTL /*line :565:46*/))

	// Error from identity code
	FROM_IDENTITY = ErrorDomain(( /*line :568:30*/_Ciconst_VIR_FROM_IDENTITY /*line :568:48*/))

	// Error from cgroups
	FROM_CGROUP = ErrorDomain(( /*line :571:28*/_Ciconst_VIR_FROM_CGROUP /*line :571:44*/))

	// Error from access control manager
	FROM_ACCESS = ErrorDomain(( /*line :574:28*/_Ciconst_VIR_FROM_ACCESS /*line :574:44*/))

	// Error from systemd code
	FROM_SYSTEMD = ErrorDomain(( /*line :577:29*/_Ciconst_VIR_FROM_SYSTEMD /*line :577:46*/))

	// Error from bhyve driver
	FROM_BHYVE = ErrorDomain(( /*line :580:27*/_Ciconst_VIR_FROM_BHYVE /*line :580:42*/))

	// Error from crypto code
	FROM_CRYPTO = ErrorDomain(( /*line :583:28*/_Ciconst_VIR_FROM_CRYPTO /*line :583:44*/))

	// Error from firewall
	FROM_FIREWALL = ErrorDomain(( /*line :586:30*/_Ciconst_VIR_FROM_FIREWALL /*line :586:48*/))

	// Erorr from polkit code
	FROM_POLKIT = ErrorDomain(( /*line :589:28*/_Ciconst_VIR_FROM_POLKIT /*line :589:44*/))

	// Error from thread utils
	FROM_THREAD = ErrorDomain(( /*line :592:28*/_Ciconst_VIR_FROM_THREAD /*line :592:44*/))

	// Error from admin backend
	FROM_ADMIN = ErrorDomain(( /*line :595:27*/_Ciconst_VIR_FROM_ADMIN /*line :595:42*/))

	// Error from log manager
	FROM_LOGGING = ErrorDomain(( /*line :598:29*/_Ciconst_VIR_FROM_LOGGING /*line :598:46*/))

	// Error from Xen xl config code
	FROM_XENXL = ErrorDomain(( /*line :601:27*/_Ciconst_VIR_FROM_XENXL /*line :601:42*/))

	// Error from perf
	FROM_PERF = ErrorDomain(( /*line :604:26*/_Ciconst_VIR_FROM_PERF /*line :604:40*/))

	// Error from libssh
	FROM_LIBSSH = ErrorDomain(( /*line :607:28*/_Ciconst_VIR_FROM_LIBSSH /*line :607:44*/))

	// Error from resoruce control
	FROM_RESCTRL = ErrorDomain(( /*line :610:29*/_Ciconst_VIR_FROM_RESCTRL /*line :610:46*/))

	// Error from firewalld
	FROM_FIREWALLD = ErrorDomain(( /*line :613:31*/_Ciconst_VIR_FROM_FIREWALLD /*line :613:50*/))

	// Error from domain checkpoint
	FROM_DOMAIN_CHECKPOINT = ErrorDomain(( /*line :616:39*/_Ciconst_VIR_FROM_DOMAIN_CHECKPOINT /*line :616:66*/))

	// Error from TPM
	FROM_TPM = ErrorDomain(( /*line :619:25*/_Ciconst_VIR_FROM_TPM /*line :619:38*/))

	// Error from BPF
	FROM_BPF = ErrorDomain(( /*line :622:25*/_Ciconst_VIR_FROM_BPF /*line :622:38*/))

	// Error from Cloud Hypervisor
	FROM_CH = ErrorDomain(( /*line :625:24*/_Ciconst_VIR_FROM_CH /*line :625:36*/))
)

type Error struct {
	Code    ErrorNumber
	Domain  ErrorDomain
	Message string
	Level   ErrorLevel
}

func (err Error) Error() string {
	return fmt.Sprintf("virError(Code=%d, Domain=%d, Message='%s')",
		err.Code, err.Domain, err.Message)
}

func (err Error) Is(target error) bool {
	n, ok := target.(ErrorNumber)
	if !ok {
		return false
	}

	return err.Code == n
}

func makeError(err * /*line :649:21*/_Ctype_virError /*line :649:31*/) Error {
	ret := Error{
		Code:    ErrorNumber(err.code),
		Domain:  ErrorDomain(err.domain),
		Message: ( /*line :653:12*/_Cfunc_GoString /*line :653:21*/)(err.message),
		Level:   ErrorLevel(err.level),
	}
	func() { _cgo0 := /*line :656:25*/err; _cgoCheckPointer(_cgo0, nil); /*line :656:29*/_Cfunc_virResetErrorWrapper(_cgo0); }()
	return ret
}
