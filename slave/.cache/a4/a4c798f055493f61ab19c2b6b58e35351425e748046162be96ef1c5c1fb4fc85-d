// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/marques/.gvm/pkgsets/go1.25.0/global/pkg/mod/libvirt.org/go/libvirt@v1.11006.0/nwfilter_binding.go:1:1
/*
 * This file is part of the libvirt-go-module project
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * Copyright (C) 2018 Red Hat, Inc.
 *
 */

package libvirt

/*
#cgo !libvirt_dlopen pkg-config: libvirt
#cgo libvirt_dlopen LDFLAGS: -ldl
#cgo libvirt_dlopen CFLAGS: -DLIBVIRT_DLOPEN
#include <stdlib.h>
#include "libvirt_generated.h"
*/
import _ "unsafe"

import (
	"unsafe"
)

type NWFilterBinding struct {
	ptr  /*line :42:6*/_Ctype_virNWFilterBindingPtr /*line :42:29*/
}

type NWFilterBindingCreateFlags uint

const (
	NWFILTER_BINDING_CREATE_VALIDATE = NetworkPortCreateFlags(( /*line :48:60*/_Ciconst_VIR_NWFILTER_BINDING_CREATE_VALIDATE /*line :48:97*/))
)

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingFree
func (f *NWFilterBinding) Free() error {
	var err  /*line :53:10*/_Ctype_virError /*line :53:20*/
	ret := func() _Ctype_int{ _cgo0 := /*line :54:41*/f.ptr; _cgoBase1 := /*line :54:48*/&err; _cgo1 := _cgoBase1; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase1, 0 == 0); return /*line :54:53*/_Cfunc_virNWFilterBindingFreeWrapper(_cgo0, _cgo1); }()
	if ret == -1 {
		return makeError(&err)
	}
	return nil
}

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingRef
func (c *NWFilterBinding) Ref() error {
	var err  /*line :63:10*/_Ctype_virError /*line :63:20*/
	ret := func() _Ctype_int{ _cgo0 := /*line :64:40*/c.ptr; _cgoBase1 := /*line :64:47*/&err; _cgo1 := _cgoBase1; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase1, 0 == 0); return /*line :64:52*/_Cfunc_virNWFilterBindingRefWrapper(_cgo0, _cgo1); }()
	if ret == -1 {
		return makeError(&err)
	}
	return nil
}

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingDelete
func (f *NWFilterBinding) Delete() error {
	var err  /*line :73:10*/_Ctype_virError /*line :73:20*/
	result := func() _Ctype_int{ _cgo0 := /*line :74:46*/f.ptr; _cgoBase1 := /*line :74:53*/&err; _cgo1 := _cgoBase1; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase1, 0 == 0); return /*line :74:58*/_Cfunc_virNWFilterBindingDeleteWrapper(_cgo0, _cgo1); }()
	if result == -1 {
		return makeError(&err)
	}
	return nil
}

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingGetPortDev
func (f *NWFilterBinding) GetPortDev() (string, error) {
	var err  /*line :83:10*/_Ctype_virError /*line :83:20*/
	result := func() *_Ctype_char{ _cgo0 := /*line :84:50*/f.ptr; _cgoBase1 := /*line :84:57*/&err; _cgo1 := _cgoBase1; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase1, 0 == 0); return /*line :84:62*/_Cfunc_virNWFilterBindingGetPortDevWrapper(_cgo0, _cgo1); }()
	if result == nil {
		return "", makeError(&err)
	}
	name := ( /*line :88:10*/_Cfunc_GoString /*line :88:19*/)(result)
	func() { _cgo0 := /*line :89:9*/unsafe.Pointer(result); _cgoCheckPointer(_cgo0, nil); /*line :89:32*/_Cfunc_free(_cgo0); }()
	return name, nil
}

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingGetFilterName
func (f *NWFilterBinding) GetFilterName() (string, error) {
	var err  /*line :95:10*/_Ctype_virError /*line :95:20*/
	result := func() *_Ctype_char{ _cgo0 := /*line :96:53*/f.ptr; _cgoBase1 := /*line :96:60*/&err; _cgo1 := _cgoBase1; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase1, 0 == 0); return /*line :96:65*/_Cfunc_virNWFilterBindingGetFilterNameWrapper(_cgo0, _cgo1); }()
	if result == nil {
		return "", makeError(&err)
	}
	name := ( /*line :100:10*/_Cfunc_GoString /*line :100:19*/)(result)
	func() { _cgo0 := /*line :101:9*/unsafe.Pointer(result); _cgoCheckPointer(_cgo0, nil); /*line :101:32*/_Cfunc_free(_cgo0); }()
	return name, nil
}

// See also https://libvirt.org/html/libvirt-libvirt-nwfilter.html#virNWFilterBindingGetXMLDesc
func (f *NWFilterBinding) GetXMLDesc(flags uint32) (string, error) {
	var err  /*line :107:10*/_Ctype_virError /*line :107:20*/
	result := func() *_Ctype_char{ _cgo0 := /*line :108:50*/f.ptr; var _cgo1 _Ctype_uint = _Ctype_uint /*line :108:63*/(flags); _cgoBase2 := /*line :108:72*/&err; _cgo2 := _cgoBase2; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgoBase2, 0 == 0); return /*line :108:77*/_Cfunc_virNWFilterBindingGetXMLDescWrapper(_cgo0, _cgo1, _cgo2); }()
	if result == nil {
		return "", makeError(&err)
	}
	xml := ( /*line :112:9*/_Cfunc_GoString /*line :112:18*/)(result)
	func() { _cgo0 := /*line :113:9*/unsafe.Pointer(result); _cgoCheckPointer(_cgo0, nil); /*line :113:32*/_Cfunc_free(_cgo0); }()
	return xml, nil
}
